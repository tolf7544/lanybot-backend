@startuml

class subProcess {
	
}

class port {
	configPath: string
	info: ProtConfig
	maximumPort: number
	processData: ProcessData

	+ get Data():PortConfig | PortError 
	+ saveData():void
	+ isUsingPort(port: number):Promise<boolean>
	+ getPortNumber():Promise<number>
	+ private portLoopCheck(portNumber: number):Promise<number | PortError>
}

note left of port::configPath
"port.json file path"
end note

note left of port::info
"default & active port number information"
end note

note left of port::maximumPort
"searching port number limit"
end note

note left of port::processData
"this process default data"
end note

note right of port::saveData
"save port config file"
end note

note right of port::portLoopCheck
"check usesable port number until check port number is maximumPort number."
end note

@enduml