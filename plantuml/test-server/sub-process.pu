@startuml

class PortManager {
    configPath = path
    info: PortConfig
    maximumPort: 65535
    process: ProcessData

	+ get data()
	+ saveData()
	+ isUsingPort(port)
	+ getPortNumber()
	private portLoopCheck(portNumber)
}


' class SubProcess {
'     process: ProcessData
'     portSetting: portManager

' 	+ get socket()
' 	+ private spawnServer()
' 	+ private connectServer(port: number)

' 	+ manageSocketConnection({ execution, option })

' 	+ manageMainSocket({ execution })
' 	private checkMainPorcessConnection()
' 	private requestProcessBlockData()
' 	private requestProcessBlockDataReceiveSocketEvent(socket)
' 	private registerManagementProcess()
' 	private registerManagementProcessReceiveSoketEvent(socket, buffer)
' 	private registerRequest(socket, resolve)

' 	+ private processErrorEvent()
' }

' note left of port::configPath
' "port.json file path"
' end note

' note left of port::info
' "default & active port number information"
' end note

' note left of port::maximumPort
' "searching port number limit"
' end note

' note left of port::processData
' "this process default data"
' end note

' note right of port::saveData 
' "save port config file"
' end note

' note right of port::portLoopCheck
' "check usesable port number until check port number is maximumPort number."
' end note

@enduml